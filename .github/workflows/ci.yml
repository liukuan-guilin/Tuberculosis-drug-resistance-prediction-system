name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test application startup
      run: |
        # Test if the application can import without errors
        python -c "import app; print('Application imports successfully')"
        echo "Application startup test completed"
    
    - name: Check file structure
      run: |
        echo "Checking required files..."
        test -f app.py || (echo "app.py not found" && exit 1)
        test -f requirements.txt || (echo "requirements.txt not found" && exit 1)
        test -f templates/index.html || (echo "templates/index.html not found" && exit 1)
        test -f static/chart.js || (echo "static/chart.js not found" && exit 1)
        echo "All required files found"
    
    - name: Validate Python syntax
      run: |
        python -m py_compile app.py
        python -m py_compile test_predict.py
        echo "Python syntax validation passed"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Check dependencies for security vulnerabilities
      run: |
        safety check -r requirements.txt || echo "Security vulnerabilities found, but continuing build"
    
    - name: Run bandit security linter
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Test Docker build
      run: |
        docker build -t tuberculosis-prediction:test .
        echo "Docker build successful"